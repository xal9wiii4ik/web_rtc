version: '3.7'

services:
  redis:
    restart: always
    image: redis
    command: redis-server
    ports:
      - '6379:6379'
  web:
    restart: always
    build: .
#    command: gunicorn django_web_rtc.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./static_volume/:/staticfiles
      - ./media_volume/:/mediafiles
#    ports:
#      - "8000:8000"
    expose:
      - 8000
    env_file:
      - ./.env.staging
  channels:
    restart: always
    build: .
    command: daphne -b 0.0.0.0 -p 8001 django_web_rtc.asgi:application
    volumes:
      - ./static_volume/:/staticfiles
      - ./media_volume/:/mediafiles
    ports:
      - "8001:8001"
    links:
      - redis
  nginx:
    restart: always
    build: .
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/web/staticfiles
      - media_volume:/home/web/mediafiles
      - ./persistentdata/certbot/conf:/etc/letsencrypt # <--here
      - ./persistentdata/certbot/www:/var/web/certbot
    image: web
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./persistentdata/certbot/conf:/etc/letsencrypt # <--here
      - ./persistentdata/certbot/www:/var/www/certbot

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme: