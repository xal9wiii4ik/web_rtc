upstream web_rtc {
    server web:8000;
}

server {
    listen 80;
    server_name web_rtc.tk;
    # server_name example.com;
    location / {
      return 301 https://$host$request_uri; # redirect all non https requests to https
    }
    location /.well-known/acme-challenge/ {
        # let's encrypt asks for this location and needs to get the response from /var/www/certbot
        # generated by certbot and available to nginx via volumes
        root /var/www/certbot;
    }
}
server {
    # new server, but for ssl (443 port)
    listen 443 ssl; # listen 443 port
    server_name web_rtc.tk;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ssl_certificate /etc/letsencrypt/live/web_rtc.tk/fullchain.pem; # <-this
    ssl_certificate_key /etc/letsencrypt/live/web_rtc.tk/privkey.pem; # <-thisgit

    location / {
        proxy_pass http://web_rtc; # pass these requests to internal upstream
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto https;
    }

    location /staticfiles/ {
        alias /home/web/staticfiles/;
    }

    location /mediafiles/ {
        alias /home/web/mediafiles/;
    }
}